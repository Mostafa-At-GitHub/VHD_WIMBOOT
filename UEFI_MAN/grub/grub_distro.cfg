if [ -e "(hd0,msdos1)/porteus/boot/syslinux/vmlinuz" ]; then
menuentry "Porteus v5RC2 Generic fully on Ram - (hd0,msdos1)/porteus" {
    linux /porteus/boot/syslinux/vmlinuz noauto copy2ram
    initrd /porteus/boot/syslinux/initrd.xz
}
fi

if [ -e "(hd0,msdos1)/porteus/optional/PC-1.xzm" ]; then
menuentry "Porteus v5RC2 for PC-1 fully on Ram - (hd0,msdos1)/porteus" {
    linux /porteus/boot/syslinux/vmlinuz noauto copy2ram load=PC-1;LibreOffice
    initrd /porteus/boot/syslinux/initrd.xz
}
fi

if [ -e "(hd0,msdos1)/porteus/optional/PC-2.xzm" ]; then
menuentry "Porteus v5RC2 for PC-2 fully on Ram - (hd0,msdos1)/porteus" {
    linux /porteus/boot/syslinux/vmlinuz noauto copy2ram load=PC-2;LibreOffice
    initrd /porteus/boot/syslinux/initrd.xz
}
fi

if [ -e "(hd0,msdos1)/porteus/changes/save.dat" ]; then
menuentry "Porteus v5RC2 with persistence - (hd0,msdos1)/porteus" {
    linux /porteus/boot/syslinux/vmlinuz noauto changes=/porteus/changes/save.dat
    initrd /porteus/boot/syslinux/initrd.xz
}
fi

if [ -e "(hd0,msdos1)/casper/vmlinuz" ];  then
menuentry "FossaDog without persistence - (hd0,msdos1)/casper" {
	linux /casper/vmlinuz  noauto
	initrd /casper/initrd1.xz
}
fi

if [ -e "(hd0,msdos1)/casper/changes.dat" ];  then
menuentry "FossaDog optional persistence on EXIT - (hd0,msdos1)/casper/changes.dat" {
	linux /casper/vmlinuz  from=/ noauto changes=EXIT:/casper/changes.dat
	initrd /casper/initrd1.xz
}
fi

if [ -e "(hd0,msdos1)/Fossapup64/puppy_fossapup64_9.5.sfs" ]; then
menuentry "Puppy Linux Fossapup64_9.5 - (hd0,msdos1)/Fossapup64" {
    echo "Loading vmlinuz"
    linux /Fossapup64/vmlinuz pmedia=usbflash pdrv=U-BOOT psubdir=/Fossapup64 pfix=fsck,fsckp
    echo "Loading initrd.gz"
    initrd /Fossapup64/initrd.gz
}
fi

if [ -e "(hd0,msdos1)/Slacko64/puppy_slacko64_7.0.sfs" ]; then
menuentry "Puppy Linux Slacko64-7.0 - (hd0,msdos1)/Slacko64" {
    linux /Slacko64/vmlinuz pmedia=usbflash pdrv=U-BOOT psubdir=/Slacko64 pfix=fsck,fsckp
    initrd /Slacko64/initrd.gz
}
fi

if [ "${grub_platform}" == "efi" ] -a [ -e "/EFI/Microsoft/Boot/bootmgfw.efi" ]; then
menuentry "Windows EFI BootManager" {
  chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}
fi

if [ "${grub_platform}" == "efi" ] -a [ -e "/EFI/BOOT/BOOTx64.EFI" ]; then
menuentry "Reboot EFI Main Menu" {
  chainloader /EFI/BOOT/BOOTx64.EFI
}
fi

if [ "${grub_platform}" == "pc" ]; then
menuentry "Windows Boot Manager 7/8/10 - MBR BIOS mode search /bootmgr" {
  search --no-floppy --file /bootmgr --set root
  ntldr /bootmgr
}
fi

if [ "${grub_platform}" == "pc" ]; then
menuentry "Grub4dos Menu" {
    linux /grub.exe
}
fi

if [ "${grub_platform}" == "pc" ]; then
menuentry "Reboot Main Menu" {
  chainloader (hd0)+1
}
fi

menuentry "Power Off" {
  halt
}

menuentry "Reboot" {
  reboot
}
