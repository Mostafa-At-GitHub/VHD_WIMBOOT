if [ -e "$iso_drive/images/linuxmint.iso" ]; then
menuentry "Linux Mint - $iso_drive/images/linuxmint.iso" {
  set iso_path=/images/linuxmint.iso
  loopback loop $iso_drive$iso_path
  echo -e 'About to boot kernel ...'
  linux (loop)/casper/vmlinuz file=/cdrom/preseed/linuxmint.seed boot=casper iso-scan/filename=$iso_path quiet splash --
  echo -e 'Done boot kernel.'
  echo -e 'About to boot RAMdisk ...'
  initrd (loop)/casper/initrd.lz
}
fi

if [ -e "$iso_drive/images/linuxmint.iso" ] -a [ -e "$iso_drive/images/linuxmint/writable" ]; then
menuentry "Linux Mint writable - $iso_drive/images/linuxmint.iso" {
  set iso_path=/images/linuxmint.iso
  loopback loop $iso_drive$iso_path
  echo -e 'About to boot kernel ...'
  linux (loop)/casper/vmlinuz file=/cdrom/preseed/linuxmint.seed boot=casper persistent persistent-path=/images/linuxmint/ iso-scan/filename=$iso_path quiet splash --
  echo -e 'Done boot kernel.'
  echo -e 'About to boot RAMdisk ...'
  initrd (loop)/casper/initrd.lz
}
fi

if [ -e "$iso_drive/images/runtimelivecd.iso" ]; then
menuentry "Knoppix - $iso_drive/images/runtimelivecd.iso" {
  set iso_path=/images/runtimelivecd.iso
  loopback loop $iso_drive$iso_path
  linux (loop)/boot/isolinux/linux bootfrom=/dev/*$iso_path lang=en apm=power-off nomce libata.force=noncq hpsa.hpsa_allow_any=1 loglevel=1 noswap tz=localtime
  initrd (loop)/boot/isolinux/minirt.gz
  loopback --delete loop
}
fi

if [ -e "$iso_drive/images/knoppix.iso" ]; then
menuentry "Knoppix - $iso_drive/images/knoppix.iso" {
  set iso_path=/images/knoppix.iso
  loopback loop $iso_drive$iso_path
  linux (loop)/boot/isolinux/linux bootfrom=/dev/*$iso_path lang=en apm=power-off nomce libata.force=noncq hpsa.hpsa_allow_any=1 loglevel=1 noswap tz=localtime
  initrd (loop)/boot/isolinux/minirt.gz
  loopback --delete loop
}
fi

if [ -e "$iso_drive/images/ubuntu.iso" ]; then
menuentry "Ubuntu - $iso_drive/images/ubuntu.iso" {
  set iso_path=/images/ubuntu.iso
  loopback loop $iso_drive$iso_path
  linux (loop)/casper/vmlinuz file=/cdrom/preseed/ubuntu.seed boot=casper iso-scan/filename=$iso_path quiet splash ---
  initrd (loop)/casper/initrd
}
fi

if [ -e "$iso_drive/images/ubuntu.iso" ] -a [ -e "$iso_drive/images/ubuntu/writable" ]; then
menuentry "Ubuntu writable - $iso_drive/images/ubuntu.iso" {
  set iso_path=/images/ubuntu.iso
  loopback loop $iso_drive$iso_path
  linux (loop)/casper/vmlinuz file=/cdrom/preseed/ubuntu.seed boot=casper persistent persistent-path=/images/ubuntu/ iso-scan/filename=$iso_path quiet splash ---
  initrd (loop)/casper/initrd
}
fi

if [ -e "$iso_drive/images/Porteus.iso" ]; then
menuentry "Linux Porteus - $iso_drive/images/Porteus.iso" {
  set iso_path=/images/Porteus.iso
  loopback loop $iso_drive$iso_path
  linux	(loop)/boot/syslinux/vmlinuz nomagic base_only norootcopy from=$iso_path
  initrd (loop)/boot/syslinux/initrd.xz
}
fi

if [ -e "$iso_drive/images/Porteus.iso" ] -a [ -e "$iso_drive/images/porteus/data.img" ]; then
menuentry "Linux Porteus data.img - $iso_drive/images/Porteus.iso" {
  set iso_path=/images/Porteus.iso
  loopback loop $iso_drive$iso_path
  linux	(loop)/boot/syslinux/vmlinuz nomagic base_only norootcopy changes=/images/porteus/data.img from=$iso_path
  initrd (loop)/boot/syslinux/initrd.xz
}
fi

if [ -e "$iso_drive/images/kali-linux.iso" ]; then
menuentry "KALI Linux - $iso_drive/images/kali-linux.iso" {
  set iso_path=/images/kali-linux.iso
  loopback loop $iso_drive$iso_path
  linux (loop)/live/vmlinuz findiso=$iso_path boot=live components splash noeject username=kali hostname=kali
  initrd (loop)/live/initrd.img
}
fi

if [ -e "$iso_drive/images/kali-linux.iso" ] -a [ -e "$iso_drive/images/kali-linux/persistence" ]; then
menuentry "KALI Linux persistence - $iso_drive/images/kali-linux.iso" {
  set iso_path=/images/kali-linux.iso
  loopback loop $iso_drive$iso_path
  linux (loop)/live/vmlinuz findiso=$iso_path boot=live persistence persistence-path=/images/kali-linux/ username=kali hostname=kali components quiet splash noeject  persistence
  initrd (loop)/live/initrd.img
}
fi

if [ "${grub_platform}" == "efi" ] -a [ -e "/EFI/Microsoft/Boot/bootmgfw.efi" ]; then
menuentry "Windows EFI BootManager" {
  chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}
fi

if [ "${grub_platform}" == "efi" ] -a [ -e "/EFI/BOOT/BOOTx64.EFI" ]; then
menuentry "Reboot EFI Main Menu" {
  chainloader /EFI/BOOT/BOOTx64.EFI
}
fi

if [ "${grub_platform}" == "pc" ]; then
menuentry "Windows Boot Manager 7/8/10 - MBR BIOS mode search /bootmgr" {
  search --no-floppy --file /bootmgr --set root
  ntldr /bootmgr
}
fi

if [ "${grub_platform}" == "pc" ]; then
menuentry "Grub4dos Menu" {
    linux /grub.exe
}
fi

if [ "${grub_platform}" == "pc" ]; then
menuentry "Reboot Main Menu" {
  chainloader (hd0)+1
}
fi

menuentry "Power Off" {
  halt
}

menuentry "Reboot" {
  reboot
}
