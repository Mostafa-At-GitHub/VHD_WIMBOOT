set timeout=10
set default=0

set menu_color_normal=white/black
set menu_color_highlight=black/light-gray

set prefix=($root)/grub

set iso_drive=""

if [ "${grub_platform}" == "efi" ]; then

   if [ "${grub_cpu}" == "x86_64" ]; then

	if [ -e "/efi/microsoft/boot/bootmgfw.efi" ]; then
	menuentry "Windows EFI BootManager - /efi/microsoft/boot/bootmgfw.efi" {
	  chainloader /efi/microsoft/boot/bootmgfw.efi
	}
	fi

	if [ -e "/efi/boot/bootx64_win.efi" ]; then
	menuentry "Windows EFI BootManager - /efi/boot/bootx64_win.efi" {
	  chainloader /efi/boot/bootx64_win.efi
	}
	fi

	if [ -e "/efi/boot/bootx64_g4d.efi" ]; then
	menuentry "UEFI Grub4dos x64 - /efi/boot/bootx64_g4d.efi" {
	  chainloader /efi/boot/bootx64_g4d.efi
	}
	fi

	if [ -e "/efi/boot/grubfmx64.efi" ]; then
	menuentry "Grub2 x64 EFI File Manager of a1ive - /efi/boot/grubfmx64.efi" {
	  chainloader /efi/boot/grubfmx64.efi
	}
	fi

	if [ -e "(hd0,msdos1)/efi/boot/grubx64_real.efi" ]; then
	menuentry "Grub2 x64 EFI Boot Manager - (hd0,msdos1)/efi/boot/grubx64_real.efi" {
	  chainloader (hd0,msdos1)/efi/boot/grubx64_real.efi
	}
	fi

	if [ -e "(hd1,gpt1)/efi/boot/grubx64_real.efi" ]; then
	menuentry "Grub2 x64 EFI Boot Manager - (hd1,gpt1)/efi/boot/grubx64_real.efi" {
	  chainloader (hd1,gpt1)/efi/boot/grubx64_real.efi
	}
	fi
   else
	if [ -e "/efi/microsoft/boot/bootmgfw.efi" ]; then
	menuentry "Windows EFI BootManager - /efi/microsoft/boot/bootmgfw.efi" {
	  chainloader /efi/microsoft/boot/bootmgfw.efi
	}
	fi

	if [ -e "/efi/boot/bootia32_win.efi" ]; then
	menuentry "Windows x86 EFI BootManager - /efi/boot/bootia32_win.efi" {
	  chainloader /efi/boot/bootia32_win.efi
	}
	fi

	if [ -e "/efi/boot/bootia32_g4d.efi" ]; then
	menuentry "UEFI Grub4dos x86 - /efi/boot/bootia32_g4d.efi" {
	  chainloader /efi/boot/bootia32_g4d.efi
	}
	fi

	if [ -e "/efi/boot/grubfmia32.efi" ]; then
	menuentry "Grub2 x86 EFI File Manager of a1ive - /efi/boot/grubfmia32.efi" {
	  chainloader /efi/boot/grubfmia32.efi
	}
	fi
   fi
fi

if [ -e "/grub/glim/main.cfg" ] -a [ -e "($root)/iso" ];  then
menuentry "GRUB Live ISO Multiboot - ($root)/iso" {
  configfile "/grub/glim/main.cfg"
}
fi

if [ -e (hd0,msdos1)/images ]; then
menuentry "Linux ISO in (hd0,msdos1)/images - /grub/grub_Linux.cfg" {
  set iso_drive=(hd0,msdos1)
  export iso_drive
  configfile /grub/grub_Linux.cfg
}
fi

if [ -e (hd0,msdos2)/images ]; then
menuentry "Linux ISO in (hd0,msdos2)/images - /grub/grub_Linux.cfg" {
  set iso_drive=(hd0,msdos2)
  export iso_drive
  configfile /grub/grub_Linux.cfg
}
fi

if [ -e (hd1,msdos1)/images ]; then
menuentry "Linux ISO in (hd1,msdos1)/images - /grub/grub_Linux.cfg" {
  set iso_drive=(hd1,msdos1)
  export iso_drive
  configfile /grub/grub_Linux.cfg
}
fi

if [ -e (hd1,msdos2)/images ]; then
menuentry "Linux ISO in (hd1,msdos2)/images - /grub/grub_Linux.cfg" {
  set iso_drive=(hd1,msdos2)
  export iso_drive
  configfile /grub/grub_Linux.cfg
}
fi

if [ -e "/AIO/grub/grub.cfg" ]; then
menuentry "AIO Menu - /AIO/grub/grub.cfg" {
  set prefix=($root)/AIO/grub
  configfile /AIO/grub/grub.cfg
}
fi

if [ "${grub_platform}" == "pc" ]; then

	if [ -e "/grub.exe" ]; then
	menuentry "Grub4dos Menu" {
		linux /grub.exe
	}
	fi

	if [ -e (hd0,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd0,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd0,msdos1)
	  ntldr (hd0,msdos1)/bootmgr
	}
	fi

	if [ -e (hd1,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd1,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd1,msdos1)
	  ntldr (hd1,msdos1)/bootmgr
	}
	fi

	if [ -e (hd2,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd2,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd2,msdos1)
	  ntldr (hd2,msdos1)/bootmgr
	}
	fi

	if [ -e (hd3,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd3,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd3,msdos1)
	  ntldr (hd3,msdos1)/bootmgr
	}
	fi

	menuentry "Windows Boot Manager 7/8/10 - MBR BIOS mode search /bootmgr" {
	  search --no-floppy --file /bootmgr --set root
	  ntldr /bootmgr
	}

	menuentry "Reboot Main Menu" {
	  chainloader (hd0)+1
	}
fi


if [ "${grub_platform}" == "efi" ] -a [ -e "/EFI/BOOT/BOOTx64.EFI" ]; then
	efiload /EFI/grub/tools/CrScreenshotDxe.efi
	menuentry "Reboot EFI Main Menu - ScreenShot - Use Left Ctrl + Left Alt + F12" {
	  chainloader /EFI/BOOT/BOOTx64.EFI
}
fi

menuentry "Power Off - root=$root   prefix=$prefix" {
  halt
}

menuentry "Reboot" {
  reboot
}
